"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.batchSynchronously = exports.batch = void 0;
const chunk_1 = require("../../../helpers/chunk");
const fill_map_1 = require("../../../helpers/fill-map");
/**
 * Batches item.
 *
 * @param _executionContext
 * @param {any[]} items An array of items
 * @param {number} size  The size of the batch
 * @param {any} fill A value used to fill missing items
 * @param {boolean} preserveKeys
 *
 * @returns Promise<Map<any, any>[]>
 */
const batch = (_executionContext, items, size, fill, preserveKeys) => {
    if ((items === null) || (items === undefined)) {
        return Promise.resolve([]);
    }
    return (0, chunk_1.chunk)(items, size, preserveKeys)
        .then((chunks) => {
        if (fill !== null && chunks.length) {
            const last = chunks.length - 1;
            const lastChunk = chunks[last];
            (0, fill_map_1.fillMap)(lastChunk, size, fill);
        }
        return chunks;
    });
};
exports.batch = batch;
const batchSynchronously = (_executionContext, items, size, fill, preserveKeys) => {
    if ((items === null) || (items === undefined)) {
        return [];
    }
    const chunks = (0, chunk_1.chunkSynchronously)(items, size, preserveKeys);
    if (fill !== null && chunks.length) {
        const last = chunks.length - 1;
        const lastChunk = chunks[last];
        (0, fill_map_1.fillMap)(lastChunk, size, fill);
    }
    return chunks;
};
exports.batchSynchronously = batchSynchronously;
