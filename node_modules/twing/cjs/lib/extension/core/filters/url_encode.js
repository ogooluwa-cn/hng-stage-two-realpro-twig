"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.urlEncodeSynchronously = exports.url_encode = void 0;
const is_traversable_1 = require("../../../helpers/is-traversable");
const iterator_to_hash_1 = require("../../../helpers/iterator-to-hash");
const phpHttpBuildQuery = require('locutus/php/url/http_build_query');
/**
 * URL encodes (RFC 3986) a string as a path segment or a hash as a query string.
 *
 * @param {string|{}} url A URL or a hash of query parameters
 *
 * @returns {Promise<string>} The URL encoded value
 */
const url_encode = (_executionContext, url) => {
    if (typeof url !== 'string') {
        if ((0, is_traversable_1.isTraversable)(url)) {
            url = (0, iterator_to_hash_1.iteratorToHash)(url);
        }
        const builtUrl = phpHttpBuildQuery(url, '', '&');
        return Promise.resolve(builtUrl.replace(/\+/g, '%20'));
    }
    return Promise.resolve(encodeURIComponent(url));
};
exports.url_encode = url_encode;
const urlEncodeSynchronously = (_executionContext, url) => {
    if (typeof url !== 'string') {
        if ((0, is_traversable_1.isTraversable)(url)) {
            url = (0, iterator_to_hash_1.iteratorToHash)(url);
        }
        const builtUrl = phpHttpBuildQuery(url, '', '&');
        return builtUrl.replace(/\+/g, '%20');
    }
    return encodeURIComponent(url);
};
exports.urlEncodeSynchronously = urlEncodeSynchronously;
