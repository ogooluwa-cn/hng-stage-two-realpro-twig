"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sortSynchronously = exports.sort = void 0;
const is_traversable_1 = require("../../../helpers/is-traversable");
const iterator_to_map_1 = require("../../../helpers/iterator-to-map");
const asort_1 = require("../../../helpers/asort");
/**
 * Sorts an iterable.
 *
 * @param _executionContext
 * @param iterable
 * @param arrow
 *
 * @returns {Promise<Map<any, any>>}
 */
const sort = async (_executionContext, iterable, arrow) => {
    if (!(0, is_traversable_1.isTraversable)(iterable)) {
        return Promise.reject(new Error(`The sort filter only works with iterables, got "${typeof iterable}".`));
    }
    const map = (0, iterator_to_map_1.iteratorToMap)(iterable);
    await (0, asort_1.asort)(map, arrow || undefined);
    return map;
};
exports.sort = sort;
const sortSynchronously = (_executionContext, iterable, arrow) => {
    if (!(0, is_traversable_1.isTraversable)(iterable)) {
        throw new Error(`The sort filter only works with iterables, got "${typeof iterable}".`);
    }
    const map = (0, iterator_to_map_1.iteratorToMap)(iterable);
    (0, asort_1.asortSynchronously)(map, arrow || undefined);
    return map;
};
exports.sortSynchronously = sortSynchronously;
