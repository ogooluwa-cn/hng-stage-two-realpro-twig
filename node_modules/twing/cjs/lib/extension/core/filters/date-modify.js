"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dateModifySynchronously = exports.dateModify = void 0;
const date_1 = require("../functions/date");
/**
 * Returns a new date object modified.
 *
 * <pre>
 *   {{ post.published_at|date_modify("-1day")|date("m/d/Y") }}
 * </pre>
 *
 * @param {TwingTemplate} template
 * @param {DateTime|string} date A date
 * @param {string} modifier A modifier string
 *
 * @returns {Promise<DateTime>} A new date object
 */
const dateModify = (executionContext, date, modifier) => {
    const { environment } = executionContext;
    const { timezone: defaultTimezone } = environment;
    return (0, date_1.createDateTime)(defaultTimezone, date, null)
        .then((dateTime) => {
        let regExp = new RegExp(/(\+|-)([0-9])(.*)/);
        let parts = regExp.exec(modifier);
        let operator = parts[1];
        let operand = Number.parseInt(parts[2]);
        let unit = parts[3].trim();
        let duration = {};
        duration[unit] = operator === '-' ? -operand : operand;
        dateTime = dateTime.plus(duration);
        return dateTime;
    });
};
exports.dateModify = dateModify;
const dateModifySynchronously = (executionContext, date, modifier) => {
    const { environment } = executionContext;
    const { timezone: defaultTimezone } = environment;
    let dateTime = (0, date_1.createDateTimeSynchronously)(defaultTimezone, date, null);
    let regExp = new RegExp(/(\+|-)([0-9])(.*)/);
    let parts = regExp.exec(modifier);
    let operator = parts[1];
    let operand = Number.parseInt(parts[2]);
    let unit = parts[3].trim();
    let duration = {};
    duration[unit] = operator === '-' ? -operand : operand;
    dateTime = dateTime.plus(duration);
    return dateTime;
};
exports.dateModifySynchronously = dateModifySynchronously;
