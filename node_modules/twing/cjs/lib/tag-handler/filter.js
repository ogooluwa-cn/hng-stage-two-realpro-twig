"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createFilterTagHandler = void 0;
const block_function_1 = require("../node/expression/block-function");
const constant_1 = require("../node/expression/constant");
const block_1 = require("../node/block");
const print_1 = require("../node/print");
/**
 * Filters a section of a template by applying filters.
 *
 * <pre>
 * {% filter upper %}
 *  This text becomes uppercase
 * {% endfilter %}
 * </pre>
 */
const createFilterTagHandler = () => {
    const tag = 'filter';
    return {
        tag,
        initialize: (parser) => {
            return (token, stream) => {
                let line = token.line;
                let column = token.column;
                console.warn(`The "filter" tag in "${stream.source.name}" at line ${line} is deprecated since Twig 2.9, use the "apply" tag instead.`);
                const name = parser.getVarName();
                const blockFunctionNode = (0, block_function_1.createBlockFunctionNode)((0, constant_1.createConstantNode)(name, line, column), null, line, column, tag);
                const filterNode = parser.parseFilterExpressionRaw(stream, blockFunctionNode, tag);
                stream.expect("TAG_END");
                const body = parser.subparse(stream, tag, (token) => {
                    return token.test("NAME", 'endfilter');
                });
                stream.next();
                stream.expect("TAG_END");
                const block = (0, block_1.createBlockNode)(name, body, line, column);
                parser.setBlock(name, block);
                return (0, print_1.createPrintNode)(filterNode, line, column);
            };
        }
    };
};
exports.createFilterTagHandler = createFilterTagHandler;
